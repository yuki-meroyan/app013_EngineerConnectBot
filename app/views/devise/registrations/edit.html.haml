.form
  .form__contents
    %h2
      ユーザー編集 #{resource_name.to_s.humanize}
    = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f|
      = render "devise/shared/error_messages", resource: resource
      .form__content
        = f.label :email, class: "form__label"
        = f.email_field :email, autofocus: true, autocomplete: "email", class: "form__box"
      .form__content
        = f.label :name, class: "form__label"
        = f.text_field :name, class: "form__box"
      .form__content
        = f.label :image, class: "form__label"
        = f.file_field :image, class: "form__box__image"
      - if devise_mapping.confirmable? && resource.pending_reconfirmation?
        %div
          Currently waiting confirmation for: #{resource.unconfirmed_email}
      %i.form__comment 【変更しない場合は空白のまま】
      .form__content
        = f.label :password, class: "form__label"
        = f.password_field :password, autocomplete: "new-password", class: "form__box"
      .form__content
        = f.label :password_confirmation, class: "form__label"
        = f.password_field :password_confirmation, autocomplete: "new-password", class: "form__box"
      %i.form__comment 【現在のパスワードを入力してください】
      .form__content
        = f.label :current_password, class: "form__label"
        = f.password_field :current_password, autocomplete: "current-password", class: "form__box"
      .form__content
        = f.submit "情報を更新する", class: "form__button"
      .form__content
        .form__link
          = link_to "戻る", :back
      .form__content
        %h3 アカウントを削除
      .form__content
        %p
          ※注意※ 今までの内容が無くなってしまいます
  = form_for(resource, as: resource_name, url: registration_path(resource_name), data: { confirm: "削除したら戻りませんが実行しますか?" }, method: :delete, class: "form__button") do |d|
    .form__content
      = d.submit "削除", class: "form__button"
